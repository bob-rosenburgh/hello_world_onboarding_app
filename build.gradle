buildscript {
    repositories {
    	jcenter()
    }

    dependencies {
    	classpath 'org.spockframework:spock-core:1.0-groovy-2.4'
    	classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.0.2'
    	classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
  	    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
    }
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


apply plugin: "jacoco"
apply plugin: 'war'
apply plugin: 'nebula.rpm'
apply plugin: "org.sonarqube"
apply plugin: 'pmd'
apply plugin: "findbugs"
apply plugin: 'checkstyle'

jacoco {
    toolVersion = "0.8.2+"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}



//testing git push hook 2

// JDK version source compatibility
// sourceCompatibility = 1.8
// project version
// version = '1.0.2'
// War file name
// war.baseName = 'hello-world'
// Web directory, this overrides the default value "webapp"
// project.webAppDirName = 'WebContent'

// Set source directory
/*sourceSets {
        main {
            java {
                srcDir 'src'
            }
        }
    }*/

task app1Rpm(type: Rpm) {
    packageName 'hello-world'
    version '1.0.2'
    arch NOARCH
    os LINUX
    into ('/usr/share/tomcat/webapps/') {
        addParentDirs = false
    from (war.outputs.files) {
           addParentDirs = false
       }
    }
}

//UPLOAD ARCHIVES STUFF USE THIS OR MAVEN STUFF
artifacts {
    archives app1Rpm
}



//new comment
uploadArchives {
    repositories {
        maven {
          credentials {
                username "admin"
                password "admin123"
            }
          
            // change to point to your repo, e.g. http://my.org/repo
            url "http://ec2-54-210-118-101.compute-1.amazonaws.com:8081/nexus/content/repositories/snapshots"
      }
    }
}

pmd {
  ignoreFailures = true
  //sourceSets = ['src/main', 'src/test']
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
    "java-basic", 
    "java-braces",
    "java-comments"
  ]
}


sonarqube {
    properties {
        property "sonar.host.url", "http://172.31.33.53:9000"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.source", "1.8"
        property "sonar.java.target", "1.8"
        property "sonar.verbose", true
    }
}
